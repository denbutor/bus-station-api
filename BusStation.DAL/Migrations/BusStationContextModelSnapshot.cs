// <auto-generated />
using System;
using BusStation.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusStation.DAL.Migrations
{
    [DbContext(typeof(BusStationContext))]
    partial class BusStationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.16");

            modelBuilder.Entity("BusStation.Data.Models.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CarNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CarType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DriverId")
                        .HasColumnType("TEXT");

                    b.Property<int>("PassengersCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("BusStation.Data.Models.Driver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CarId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DriverPhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DriverPib")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CarId")
                        .IsUnique();

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("BusStation.Data.Models.Flight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ScheduleId")
                        .HasColumnType("TEXT");

                    b.Property<float>("TicketCost")
                        .HasColumnType("REAL");

                    b.Property<Guid?>("TicketId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("TicketId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("BusStation.Data.Models.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Distance")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Duration")
                        .HasColumnType("TEXT");

                    b.Property<string>("Finish")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FlightId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Start")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FlightId")
                        .IsUnique();

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("BusStation.Data.Models.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("TEXT");

                    b.Property<float>("TicketCost")
                        .HasColumnType("REAL");

                    b.Property<string>("WeekDay")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("BusStation.Data.Models.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FlightId")
                        .HasColumnType("TEXT");

                    b.Property<string>("OnlineTicket")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PassengersName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("SaleStatus")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("BusStation.Data.Models.Driver", b =>
                {
                    b.HasOne("BusStation.Data.Models.Car", "Car")
                        .WithOne("Driver")
                        .HasForeignKey("BusStation.Data.Models.Driver", "CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("BusStation.Data.Models.Flight", b =>
                {
                    b.HasOne("BusStation.Data.Models.Schedule", "Schedule")
                        .WithMany("Flights")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusStation.Data.Models.Ticket", null)
                        .WithMany("Flights")
                        .HasForeignKey("TicketId");

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("BusStation.Data.Models.Route", b =>
                {
                    b.HasOne("BusStation.Data.Models.Flight", "Flight")
                        .WithOne("Route")
                        .HasForeignKey("BusStation.Data.Models.Route", "FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("BusStation.Data.Models.Ticket", b =>
                {
                    b.HasOne("BusStation.Data.Models.Flight", "Flight")
                        .WithMany("Tickets")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("BusStation.Data.Models.Car", b =>
                {
                    b.Navigation("Driver")
                        .IsRequired();
                });

            modelBuilder.Entity("BusStation.Data.Models.Flight", b =>
                {
                    b.Navigation("Route")
                        .IsRequired();

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("BusStation.Data.Models.Schedule", b =>
                {
                    b.Navigation("Flights");
                });

            modelBuilder.Entity("BusStation.Data.Models.Ticket", b =>
                {
                    b.Navigation("Flights");
                });
#pragma warning restore 612, 618
        }
    }
}
